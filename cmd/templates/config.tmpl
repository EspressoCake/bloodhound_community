---
services:
  app-db:
    image: postgres:13.2
    environment:
      - POSTGRES_USER=bloodhound
      - POSTGRES_PASSWORD=bloodhoundcommunityedition
      - POSTGRES_DB=bloodhound
    volumes:
      - postgres-data-{{.Codename}}:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-bloodhound} -d bloodhound -h 127.0.0.1 -p 5432"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  graph-db:
    image: neo4j:4.4
    environment:
      NEO4J_AUTH: neo4j/{{.Password}}
      NEO4J_dbms_allow__upgrade: true
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_security_procedures_allowlist: "apoc.*"
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
    ports:
      - 7687      
      - 7474
    volumes:
      - ./neo4j:/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -O /dev/null -q http://localhost:7474 || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  bloodhound:
    image: specterops/bloodhound:latest
    environment:
      - bhe_disable_cypher_qc=false
      - bhe_default_admin_principal_name=admin
      - bhe_default_admin_principal_name={{.CEPassword}}
    ports:
      - 8080
    volumes:
      - ./bloodhound.json:/bloodhound.config.json:ro
    depends_on:
      app-db:
        condition: service_healthy
      graph-db:
        condition: service_healthy

volumes:
  postgres-data-{{.Codename}}:
